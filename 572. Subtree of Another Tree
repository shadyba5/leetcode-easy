
using namespace std;



struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode() : val(0), left(nullptr), right(nullptr) {}
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};



class Solution {
public:

    bool isSametree(TreeNode* a, TreeNode* b){
        if(a == nullptr && b == nullptr)
            return true;
        if(a == nullptr)
            return false;
        if(b == nullptr)
            return false;
        if(a->val==b->val)
            return isSametree(a->right,b->right)&& isSametree(a->left,b->left);
        return false;
    }

    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root == nullptr)
            return false;
        if(isSametree(root,subRoot))
            return true;
        else
            return isSubtree(root->right,subRoot) || isSubtree(root->left,subRoot);
    }
};
