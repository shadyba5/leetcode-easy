#include <string>
#include <iostream>
#include <vector>
#include "stdio.h"
#include <set>

using namespace std;




struct ListNode {
    int val;
    ListNode *next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode *next) : val(x), next(next) {}
};

class Solution {
public:
    static ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1== nullptr && list2== nullptr){
            return nullptr;
        }
        if(list1== nullptr){
            return list2;
        }
        if(list2== nullptr){
            return list1;
        }
        if(list1->val >=list2->val){
            list2->next = mergeTwoLists(list1,list2->next);
        }
        else{
            list1->next= mergeTwoLists(list1->next,list2);
            list2=list1;
        }
        return list2;
    }
};


int main() {
    ListNode a(1);
    ListNode b(1);
    ListNode c(2);
    ListNode d(3);
    ListNode e(4);
    ListNode f(4);
    ListNode* list1=&a;
    ListNode* list2=&b;
    a.next=&c;
    c.next=&e;
    e.next= nullptr;
    b.next=&d;
    d.next=&f;
    f.next= nullptr;

    ListNode* res= Solution::mergeTwoLists(list1,list2);
    return 0;
}
