#include <string>
#include <iostream>
#include <vector>
#include "stdio.h"

using namespace std;

class Solution {
public:
    static vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        int row_num = mat.size();
        int col_num = mat[0].size();
        vector<int> res;
        bool row_in_res[100];
        for (int i = 0; i < 100; ++i) {
            row_in_res[i]=false;
        }
        int stop_cond=k;
        for (int j = 0; j < col_num; ++j) {
            for (int i = 0; i < row_num; ++i) {
                if(mat[i][j]==0 && !(row_in_res[i])){
                    res.insert(res.end(),i);
                    row_in_res[i]=true;
                    stop_cond--;
                    if(stop_cond==0){
                        return res;
                    }
                }
            }
        }
        for (int i = 0; i < row_num && stop_cond!=0; ++i) {
            if(mat[i][col_num-1]==1){
                res.insert(res.end(),i);
                stop_cond--;
            }
        }
        return res;
    }
};

int main() {
    vector<vector<int>> mat = {{1,0,0,0},{1,1,1,1},{1,0,0,0},{1,0,0,0}};
    int k = 4;
    vector<int> res =Solution::kWeakestRows(mat,k);
    for (int i = 0; i < k; ++i) {
        cout << res[i] << endl;
    }
    return 0;
}
